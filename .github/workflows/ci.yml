name: Rust CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    
    - name: Create required directories
      run: |
        mkdir -p config data logs
      shell: bash
    
    - name: Check code formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    
    - name: Clippy check
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace -- -D warnings
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --verbose
    
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --verbose
    
  release:
    name: Create release binaries
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: kv-server
            asset_name: kv-server-linux
          - os: ubuntu-latest
            artifact_name: kv-client
            asset_name: kv-client-linux
          - os: windows-latest
            artifact_name: kv-server.exe
            asset_name: kv-server-windows.exe
          - os: windows-latest
            artifact_name: kv-client.exe
            asset_name: kv-client-windows.exe
          - os: macos-latest
            artifact_name: kv-server
            asset_name: kv-server-macos
          - os: macos-latest
            artifact_name: kv-client
            asset_name: kv-client-macos

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Build release binaries
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --workspace
    
    - name: Upload release asset
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: target/release/${{ matrix.artifact_name }}
    
    - name: Create GitHub Release
      if: matrix.os == 'ubuntu-latest' && matrix.artifact_name == 'kv-server'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/release/kv-server
          target/release/kv-client
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}